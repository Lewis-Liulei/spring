<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	   xmlns:tx="http://www.springframework.org/schema/tx"
	   xmlns:aop="http://www.springframework.org/schema/aop"
	   xmlns:context="http://www.springframework.org/schema/context"
	   xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
           http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd">

	<bean id="datasourcePool" abstract="true" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
		<property name="initialSize" value="${dbPool.initialSize}" />
		<property name="minIdle" value="${dbPool.minIdle}" />
		<property name="maxActive" value="${dbPool.maxActive}" />
		<property name="maxWait" value="${dbPool.maxWait}" />
		<property name="timeBetweenEvictionRunsMillis" value="${dbPool.timeBetweenEvictionRunsMillis}" />
		<property name="minEvictableIdleTimeMillis" value="${dbPool.minEvictableIdleTimeMillis}" />
		<property name="validationQuery" value="${dbPool.validationQuery}" />
		<property name="testWhileIdle" value="${dbPool.testWhileIdle}" />
		<property name="testOnBorrow" value="${dbPool.testOnBorrow}" />
		<property name="testOnReturn" value="${dbPool.testOnReturn}" />
		<property name="poolPreparedStatements" value="${dbPool.poolPreparedStatements}" />
		<property name="maxPoolPreparedStatementPerConnectionSize" value="${dbPool.maxPoolPreparedStatementPerConnectionSize}" />
		<property name="filters" value="${dbPool.filters}" />
	</bean>
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="configLocation" value="classpath:mybatis-config.xml"/>
		<property name="mapperLocations" value="classpath:mapper/*.xml"/>
	</bean>
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<!-- 扫描me.gacl.dao这个包以及它的子包下的所有映射接口类 -->
		<property name="basePackage" value="dao" />
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory" />
		<property name="annotationClass" value="org.springframework.stereotype.Repository"/>
	</bean>
	<bean id="dataSource" parent="datasourcePool">
		<property name="driverClassName" value="${mysql.jdbc.driverClassName}" />
		<property name="url" value="${mysql.jdbc.url}" />
		<property name="username" value="${mysql.jdbc.username}" />
		<property name="password" value="${mysql.jdbc.password}" />
	</bean>

	<!--<bean id="dataSource2" parent="datasourcePool">
		<property name="driverClassName" value="${mysql2.jdbc.driverClassName}" />
		<property name="url" value="${mysql2.jdbc.url}" />
		<property name="username" value="${mysql2.jdbc.username}" />
		<property name="password" value="${mysql2.jdbc.password}" />
	</bean>-->

<!--
	<bean id="dynamicDataSourceEntry"  class="liulei.core.common.jdbc.datasource.DynamicDataSourceEntry" />

	<bean id="dynamicDataSource" class="liulei.core.common.jdbc.datasource.DynamicDataSource" >
		<property name="dataSourceEntry" ref="dynamicDataSourceEntry"></property>
		<property name="targetDataSources">
			<map>
				<entry key="db_one" value-ref="dataSource"></entry>
				<entry key="db_two" value-ref="dataSource2"></entry>
			</map>
		</property>
		<property name="defaultTargetDataSource" ref="dataSource" />
	</bean>-->

</beans>